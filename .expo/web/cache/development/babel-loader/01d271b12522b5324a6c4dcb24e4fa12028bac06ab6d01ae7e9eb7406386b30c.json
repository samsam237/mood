{"ast":null,"code":"export var moodService = {\n  generateAnalytics: function generateAnalytics(moods) {\n    if (!moods || moods.length === 0) {\n      return {\n        averageMood: 0,\n        moodTrend: [],\n        moodDistribution: {},\n        weeklyAverage: 0\n      };\n    }\n    var averageMood = moods.reduce(function (sum, mood) {\n      return sum + mood.value;\n    }, 0) / moods.length;\n    var thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    var recentMoods = moods.filter(function (mood) {\n      return new Date(mood.timestamp) >= thirtyDaysAgo;\n    });\n    var moodTrend = recentMoods.map(function (mood) {\n      return {\n        date: new Date(mood.timestamp).toLocaleDateString(),\n        value: mood.value\n      };\n    });\n    var moodDistribution = moods.reduce(function (acc, mood) {\n      acc[mood.label] = (acc[mood.label] || 0) + 1;\n      return acc;\n    }, {});\n    var weekAgo = new Date();\n    weekAgo.setDate(weekAgo.getDate() - 7);\n    var weeklyMoods = moods.filter(function (mood) {\n      return new Date(mood.timestamp) >= weekAgo;\n    });\n    var weeklyAverage = weeklyMoods.length > 0 ? weeklyMoods.reduce(function (sum, mood) {\n      return sum + mood.value;\n    }, 0) / weeklyMoods.length : 0;\n    return {\n      averageMood: averageMood,\n      moodTrend: moodTrend,\n      moodDistribution: moodDistribution,\n      weeklyAverage: weeklyAverage\n    };\n  }\n};","map":{"version":3,"names":["moodService","generateAnalytics","moods","length","averageMood","moodTrend","moodDistribution","weeklyAverage","reduce","sum","mood","value","thirtyDaysAgo","Date","setDate","getDate","recentMoods","filter","timestamp","map","date","toLocaleDateString","acc","label","weekAgo","weeklyMoods"],"sources":["C:/Users/DELL/Documents/projets/nino/actipod/mood/src/services/moodService.js"],"sourcesContent":["export const moodService = {\r\n  generateAnalytics(moods) {\r\n    if (!moods || moods.length === 0) {\r\n      return {\r\n        averageMood: 0,\r\n        moodTrend: [],\r\n        moodDistribution: {},\r\n        weeklyAverage: 0,\r\n      };\r\n    }\r\n\r\n    // Calculate average mood\r\n    const averageMood = moods.reduce((sum, mood) => sum + mood.value, 0) / moods.length;\r\n\r\n    // Generate mood trend for last 30 days\r\n    const thirtyDaysAgo = new Date();\r\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\r\n    \r\n    const recentMoods = moods.filter(\r\n      mood => new Date(mood.timestamp) >= thirtyDaysAgo\r\n    );\r\n\r\n    const moodTrend = recentMoods.map(mood => ({\r\n      date: new Date(mood.timestamp).toLocaleDateString(),\r\n      value: mood.value,\r\n    }));\r\n\r\n    // Calculate mood distribution\r\n    const moodDistribution = moods.reduce((acc, mood) => {\r\n      acc[mood.label] = (acc[mood.label] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Calculate weekly average\r\n    const weekAgo = new Date();\r\n    weekAgo.setDate(weekAgo.getDate() - 7);\r\n    const weeklyMoods = moods.filter(\r\n      mood => new Date(mood.timestamp) >= weekAgo\r\n    );\r\n    const weeklyAverage = weeklyMoods.length > 0 \r\n      ? weeklyMoods.reduce((sum, mood) => sum + mood.value, 0) / weeklyMoods.length\r\n      : 0;\r\n\r\n    return {\r\n      averageMood,\r\n      moodTrend,\r\n      moodDistribution,\r\n      weeklyAverage,\r\n    };\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG;EACzBC,iBAAiB,WAAjBA,iBAAiBA,CAACC,KAAK,EAAE;IACvB,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAChC,OAAO;QACLC,WAAW,EAAE,CAAC;QACdC,SAAS,EAAE,EAAE;QACbC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,aAAa,EAAE;MACjB,CAAC;IACH;IAGA,IAAMH,WAAW,GAAGF,KAAK,CAACM,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;MAAA,OAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK;IAAA,GAAE,CAAC,CAAC,GAAGT,KAAK,CAACC,MAAM;IAGnF,IAAMS,aAAa,GAAG,IAAIC,IAAI,CAAC,CAAC;IAChCD,aAAa,CAACE,OAAO,CAACF,aAAa,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAEnD,IAAMC,WAAW,GAAGd,KAAK,CAACe,MAAM,CAC9B,UAAAP,IAAI;MAAA,OAAI,IAAIG,IAAI,CAACH,IAAI,CAACQ,SAAS,CAAC,IAAIN,aAAa;IAAA,CACnD,CAAC;IAED,IAAMP,SAAS,GAAGW,WAAW,CAACG,GAAG,CAAC,UAAAT,IAAI;MAAA,OAAK;QACzCU,IAAI,EAAE,IAAIP,IAAI,CAACH,IAAI,CAACQ,SAAS,CAAC,CAACG,kBAAkB,CAAC,CAAC;QACnDV,KAAK,EAAED,IAAI,CAACC;MACd,CAAC;IAAA,CAAC,CAAC;IAGH,IAAML,gBAAgB,GAAGJ,KAAK,CAACM,MAAM,CAAC,UAACc,GAAG,EAAEZ,IAAI,EAAK;MACnDY,GAAG,CAACZ,IAAI,CAACa,KAAK,CAAC,GAAG,CAACD,GAAG,CAACZ,IAAI,CAACa,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAC5C,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAGN,IAAME,OAAO,GAAG,IAAIX,IAAI,CAAC,CAAC;IAC1BW,OAAO,CAACV,OAAO,CAACU,OAAO,CAACT,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACtC,IAAMU,WAAW,GAAGvB,KAAK,CAACe,MAAM,CAC9B,UAAAP,IAAI;MAAA,OAAI,IAAIG,IAAI,CAACH,IAAI,CAACQ,SAAS,CAAC,IAAIM,OAAO;IAAA,CAC7C,CAAC;IACD,IAAMjB,aAAa,GAAGkB,WAAW,CAACtB,MAAM,GAAG,CAAC,GACxCsB,WAAW,CAACjB,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;MAAA,OAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK;IAAA,GAAE,CAAC,CAAC,GAAGc,WAAW,CAACtB,MAAM,GAC3E,CAAC;IAEL,OAAO;MACLC,WAAW,EAAXA,WAAW;MACXC,SAAS,EAATA,SAAS;MACTC,gBAAgB,EAAhBA,gBAAgB;MAChBC,aAAa,EAAbA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}